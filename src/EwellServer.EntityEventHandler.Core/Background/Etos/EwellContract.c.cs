// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ewell_contract.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.Ewell {

  #region Events
  public partial class ProjectRegistered : aelf::IEvent<ProjectRegistered>
  {
    public global::System.Collections.Generic.IEnumerable<ProjectRegistered> GetIndexed()
    {
      return new List<ProjectRegistered>
      {
      };
    }

    public ProjectRegistered GetNonIndexed()
    {
      return new ProjectRegistered
      {
        ProjectId = ProjectId,
        AcceptedCurrency = AcceptedCurrency,
        ProjectCurrency = ProjectCurrency,
        CrowdFundingType = CrowdFundingType,
        CrowdFundingIssueAmount = CrowdFundingIssueAmount,
        PreSalePrice = PreSalePrice,
        StartTime = StartTime,
        EndTime = EndTime,
        MinSubscription = MinSubscription,
        MaxSubscription = MaxSubscription,
        PublicSalePrice = PublicSalePrice,
        ListMarketInfo = ListMarketInfo,
        LiquidityLockProportion = LiquidityLockProportion,
        UnlockTime = UnlockTime,
        IsEnableWhitelist = IsEnableWhitelist,
        WhitelistId = WhitelistId,
        IsBurnRestToken = IsBurnRestToken,
        TotalPeriod = TotalPeriod,
        AdditionalInfo = AdditionalInfo,
        ToRaisedAmount = ToRaisedAmount,
        Creator = Creator,
        FirstDistributeProportion = FirstDistributeProportion,
        RestDistributeProportion = RestDistributeProportion,
        PeriodDuration = PeriodDuration,
        VirtualAddress = VirtualAddress,
        TokenReleaseTime = TokenReleaseTime,
      };
    }
  }

  public partial class NewWhitelistIdSet : aelf::IEvent<NewWhitelistIdSet>
  {
    public global::System.Collections.Generic.IEnumerable<NewWhitelistIdSet> GetIndexed()
    {
      return new List<NewWhitelistIdSet>
      {
      };
    }

    public NewWhitelistIdSet GetNonIndexed()
    {
      return new NewWhitelistIdSet
      {
        ProjectId = ProjectId,
        WhitelistId = WhitelistId,
      };
    }
  }

  public partial class AdditionalInfoUpdated : aelf::IEvent<AdditionalInfoUpdated>
  {
    public global::System.Collections.Generic.IEnumerable<AdditionalInfoUpdated> GetIndexed()
    {
      return new List<AdditionalInfoUpdated>
      {
      };
    }

    public AdditionalInfoUpdated GetNonIndexed()
    {
      return new AdditionalInfoUpdated
      {
        ProjectId = ProjectId,
        AdditionalInfo = AdditionalInfo,
      };
    }
  }

  public partial class ProjectCanceled : aelf::IEvent<ProjectCanceled>
  {
    public global::System.Collections.Generic.IEnumerable<ProjectCanceled> GetIndexed()
    {
      return new List<ProjectCanceled>
      {
      };
    }

    public ProjectCanceled GetNonIndexed()
    {
      return new ProjectCanceled
      {
        ProjectId = ProjectId,
      };
    }
  }

  public partial class PeriodUpdated : aelf::IEvent<PeriodUpdated>
  {
    public global::System.Collections.Generic.IEnumerable<PeriodUpdated> GetIndexed()
    {
      return new List<PeriodUpdated>
      {
      };
    }

    public PeriodUpdated GetNonIndexed()
    {
      return new PeriodUpdated
      {
        ProjectId = ProjectId,
        NewPeriod = NewPeriod,
      };
    }
  }

  public partial class Invested : aelf::IEvent<Invested>
  {
    public global::System.Collections.Generic.IEnumerable<Invested> GetIndexed()
    {
      return new List<Invested>
      {
      };
    }

    public Invested GetNonIndexed()
    {
      return new Invested
      {
        ProjectId = ProjectId,
        User = User,
        InvestSymbol = InvestSymbol,
        Amount = Amount,
        TotalAmount = TotalAmount,
        ProjectCurrency = ProjectCurrency,
        ToClaimAmount = ToClaimAmount,
      };
    }
  }

  public partial class UnInvested : aelf::IEvent<UnInvested>
  {
    public global::System.Collections.Generic.IEnumerable<UnInvested> GetIndexed()
    {
      return new List<UnInvested>
      {
      };
    }

    public UnInvested GetNonIndexed()
    {
      return new UnInvested
      {
        ProjectId = ProjectId,
        User = User,
        InvestSymbol = InvestSymbol,
        UnInvestAmount = UnInvestAmount,
        TotalAmount = TotalAmount,
      };
    }
  }

  internal partial class LiquidatedDamageRecord : aelf::IEvent<LiquidatedDamageRecord>
  {
    public global::System.Collections.Generic.IEnumerable<LiquidatedDamageRecord> GetIndexed()
    {
      return new List<LiquidatedDamageRecord>
      {
      };
    }

    public LiquidatedDamageRecord GetNonIndexed()
    {
      return new LiquidatedDamageRecord
      {
        ProjectId = ProjectId,
        User = User,
        InvestSymbol = InvestSymbol,
        Amount = Amount,
      };
    }
  }

  public partial class LiquidatedDamageClaimed : aelf::IEvent<LiquidatedDamageClaimed>
  {
    public global::System.Collections.Generic.IEnumerable<LiquidatedDamageClaimed> GetIndexed()
    {
      return new List<LiquidatedDamageClaimed>
      {
      };
    }

    public LiquidatedDamageClaimed GetNonIndexed()
    {
      return new LiquidatedDamageClaimed
      {
        ProjectId = ProjectId,
        User = User,
        InvestSymbol = InvestSymbol,
        Amount = Amount,
      };
    }
  }

  public partial class Claimed : aelf::IEvent<Claimed>
  {
    public global::System.Collections.Generic.IEnumerable<Claimed> GetIndexed()
    {
      return new List<Claimed>
      {
      };
    }

    public Claimed GetNonIndexed()
    {
      return new Claimed
      {
        ProjectId = ProjectId,
        User = User,
        ProjectCurrency = ProjectCurrency,
        Amount = Amount,
        LatestPeriod = LatestPeriod,
        TotalPeriod = TotalPeriod,
      };
    }
  }

  public partial class ReFunded : aelf::IEvent<ReFunded>
  {
    public global::System.Collections.Generic.IEnumerable<ReFunded> GetIndexed()
    {
      return new List<ReFunded>
      {
      };
    }

    public ReFunded GetNonIndexed()
    {
      return new ReFunded
      {
        ProjectId = ProjectId,
        User = User,
        InvestSymbol = InvestSymbol,
        Amount = Amount,
      };
    }
  }

  internal partial class Withdrawn : aelf::IEvent<Withdrawn>
  {
    public global::System.Collections.Generic.IEnumerable<Withdrawn> GetIndexed()
    {
      return new List<Withdrawn>
      {
      };
    }

    public Withdrawn GetNonIndexed()
    {
      return new Withdrawn
      {
        ProjectId = ProjectId,
        AcceptedSymbol = AcceptedSymbol,
        WithdrawAmount = WithdrawAmount,
        ProjectCurrency = ProjectCurrency,
        IsBurnRestToken = IsBurnRestToken,
        BurnAmount = BurnAmount,
      };
    }
  }

  #endregion
  internal static partial class EwellContractContainer
  {
    static readonly string __ServiceName = "EwellContract";

    #region Marshallers
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.InitializeInput> __Marshaller_InitializeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.InitializeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.RegisterInput> __Marshaller_RegisterInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.RegisterInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.UpdateAdditionalInfoInput> __Marshaller_UpdateAdditionalInfoInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.UpdateAdditionalInfoInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Hash> __Marshaller_aelf_Hash = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Hash.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.AddWhitelistsInput> __Marshaller_AddWhitelistsInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.AddWhitelistsInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.RemoveWhitelistsInput> __Marshaller_RemoveWhitelistsInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.RemoveWhitelistsInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.SetWhitelistIdInput> __Marshaller_SetWhitelistIdInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.SetWhitelistIdInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.InvestInput> __Marshaller_InvestInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.InvestInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.ReFundAllInput> __Marshaller_ReFundAllInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.ReFundAllInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.ClaimInput> __Marshaller_ClaimInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.ClaimInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Types.Address> __Marshaller_aelf_Address = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Types.Address.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.ProjectInfo> __Marshaller_ProjectInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.ProjectInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.ProjectListInfo> __Marshaller_ProjectListInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.ProjectListInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.ExtraInfoIdList> __Marshaller_ExtraInfoIdList = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.ExtraInfoIdList.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.GetInvestDetailInput> __Marshaller_GetInvestDetailInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.GetInvestDetailInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.InvestDetail> __Marshaller_InvestDetail = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.InvestDetail.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.GetProfitDetailInput> __Marshaller_GetProfitDetailInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.GetProfitDetailInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.ProfitDetail> __Marshaller_ProfitDetail = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.ProfitDetail.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.Ewell.LiquidatedDamageDetails> __Marshaller_LiquidatedDamageDetails = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.Ewell.LiquidatedDamageDetails.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::AElf.Contracts.Ewell.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Initialize = new aelf::Method<global::AElf.Contracts.Ewell.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Initialize",
        __Marshaller_InitializeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Ewell.RegisterInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Register = new aelf::Method<global::AElf.Contracts.Ewell.RegisterInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Register",
        __Marshaller_RegisterInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Ewell.UpdateAdditionalInfoInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateAdditionalInfo = new aelf::Method<global::AElf.Contracts.Ewell.UpdateAdditionalInfoInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UpdateAdditionalInfo",
        __Marshaller_UpdateAdditionalInfoInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Cancel = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Cancel",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_LockLiquidity = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "LockLiquidity",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Withdraw = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Withdraw",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Ewell.AddWhitelistsInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddWhitelists = new aelf::Method<global::AElf.Contracts.Ewell.AddWhitelistsInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddWhitelists",
        __Marshaller_AddWhitelistsInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Ewell.RemoveWhitelistsInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveWhitelists = new aelf::Method<global::AElf.Contracts.Ewell.RemoveWhitelistsInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "RemoveWhitelists",
        __Marshaller_RemoveWhitelistsInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_NextPeriod = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "NextPeriod",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Ewell.SetWhitelistIdInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetWhitelistId = new aelf::Method<global::AElf.Contracts.Ewell.SetWhitelistIdInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetWhitelistId",
        __Marshaller_SetWhitelistIdInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Ewell.InvestInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Invest = new aelf::Method<global::AElf.Contracts.Ewell.InvestInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Invest",
        __Marshaller_InvestInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UnInvest = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UnInvest",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ReFund = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ReFund",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Ewell.ReFundAllInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ReFundAll = new aelf::Method<global::AElf.Contracts.Ewell.ReFundAllInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ReFundAll",
        __Marshaller_ReFundAllInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.Ewell.ClaimInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Claim = new aelf::Method<global::AElf.Contracts.Ewell.ClaimInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Claim",
        __Marshaller_ClaimInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ClaimLiquidatedDamage = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ClaimLiquidatedDamage",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ClaimLiquidatedDamageAll = new aelf::Method<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ClaimLiquidatedDamageAll",
        __Marshaller_aelf_Hash,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetWhitelistContractAddress = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetWhitelistContractAddress",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetAdmin = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetAdmin",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> __Method_GetTokenAddress = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetTokenAddress",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::AElf.Types.Hash, global::AElf.Contracts.Ewell.ProjectInfo> __Method_GetProjectInfo = new aelf::Method<global::AElf.Types.Hash, global::AElf.Contracts.Ewell.ProjectInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetProjectInfo",
        __Marshaller_aelf_Hash,
        __Marshaller_ProjectInfo);

    static readonly aelf::Method<global::AElf.Types.Hash, global::AElf.Contracts.Ewell.ProjectListInfo> __Method_GetProjectListInfo = new aelf::Method<global::AElf.Types.Hash, global::AElf.Contracts.Ewell.ProjectListInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetProjectListInfo",
        __Marshaller_aelf_Hash,
        __Marshaller_ProjectListInfo);

    static readonly aelf::Method<global::AElf.Types.Hash, global::AElf.Contracts.Ewell.ExtraInfoIdList> __Method_GetWhitelist = new aelf::Method<global::AElf.Types.Hash, global::AElf.Contracts.Ewell.ExtraInfoIdList>(
        aelf::MethodType.View,
        __ServiceName,
        "GetWhitelist",
        __Marshaller_aelf_Hash,
        __Marshaller_ExtraInfoIdList);

    static readonly aelf::Method<global::AElf.Contracts.Ewell.GetInvestDetailInput, global::AElf.Contracts.Ewell.InvestDetail> __Method_GetInvestDetail = new aelf::Method<global::AElf.Contracts.Ewell.GetInvestDetailInput, global::AElf.Contracts.Ewell.InvestDetail>(
        aelf::MethodType.View,
        __ServiceName,
        "GetInvestDetail",
        __Marshaller_GetInvestDetailInput,
        __Marshaller_InvestDetail);

    static readonly aelf::Method<global::AElf.Contracts.Ewell.GetProfitDetailInput, global::AElf.Contracts.Ewell.ProfitDetail> __Method_GetProfitDetail = new aelf::Method<global::AElf.Contracts.Ewell.GetProfitDetailInput, global::AElf.Contracts.Ewell.ProfitDetail>(
        aelf::MethodType.View,
        __ServiceName,
        "GetProfitDetail",
        __Marshaller_GetProfitDetailInput,
        __Marshaller_ProfitDetail);

    static readonly aelf::Method<global::AElf.Types.Hash, global::AElf.Types.Hash> __Method_GetWhitelistId = new aelf::Method<global::AElf.Types.Hash, global::AElf.Types.Hash>(
        aelf::MethodType.View,
        __ServiceName,
        "GetWhitelistId",
        __Marshaller_aelf_Hash,
        __Marshaller_aelf_Hash);

    static readonly aelf::Method<global::AElf.Types.Hash, global::AElf.Contracts.Ewell.LiquidatedDamageDetails> __Method_GetLiquidatedDamageDetails = new aelf::Method<global::AElf.Types.Hash, global::AElf.Contracts.Ewell.LiquidatedDamageDetails>(
        aelf::MethodType.View,
        __ServiceName,
        "GetLiquidatedDamageDetails",
        __Marshaller_aelf_Hash,
        __Marshaller_LiquidatedDamageDetails);

    static readonly aelf::Method<global::AElf.Types.Hash, global::AElf.Types.Address> __Method_GetProjectAddressByProjectHash = new aelf::Method<global::AElf.Types.Hash, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetProjectAddressByProjectHash",
        __Marshaller_aelf_Hash,
        __Marshaller_aelf_Address);

    static readonly aelf::Method<global::AElf.Types.Address, global::AElf.Types.Address> __Method_GetPendingProjectAddress = new aelf::Method<global::AElf.Types.Address, global::AElf.Types.Address>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPendingProjectAddress",
        __Marshaller_aelf_Address,
        __Marshaller_aelf_Address);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AElf.Contracts.Ewell.EwellContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Contracts.Ewell.EwellContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    public class EwellContractStub : aelf::ContractStubBase
    {
      public aelf::IMethodStub<global::AElf.Contracts.Ewell.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty> Initialize
      {
        get { return __factory.Create(__Method_Initialize); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.Ewell.RegisterInput, global::Google.Protobuf.WellKnownTypes.Empty> Register
      {
        get { return __factory.Create(__Method_Register); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.Ewell.UpdateAdditionalInfoInput, global::Google.Protobuf.WellKnownTypes.Empty> UpdateAdditionalInfo
      {
        get { return __factory.Create(__Method_UpdateAdditionalInfo); }
      }

      public aelf::IMethodStub<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> Cancel
      {
        get { return __factory.Create(__Method_Cancel); }
      }

      public aelf::IMethodStub<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> LockLiquidity
      {
        get { return __factory.Create(__Method_LockLiquidity); }
      }

      public aelf::IMethodStub<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> Withdraw
      {
        get { return __factory.Create(__Method_Withdraw); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.Ewell.AddWhitelistsInput, global::Google.Protobuf.WellKnownTypes.Empty> AddWhitelists
      {
        get { return __factory.Create(__Method_AddWhitelists); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.Ewell.RemoveWhitelistsInput, global::Google.Protobuf.WellKnownTypes.Empty> RemoveWhitelists
      {
        get { return __factory.Create(__Method_RemoveWhitelists); }
      }

      public aelf::IMethodStub<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> NextPeriod
      {
        get { return __factory.Create(__Method_NextPeriod); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.Ewell.SetWhitelistIdInput, global::Google.Protobuf.WellKnownTypes.Empty> SetWhitelistId
      {
        get { return __factory.Create(__Method_SetWhitelistId); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.Ewell.InvestInput, global::Google.Protobuf.WellKnownTypes.Empty> Invest
      {
        get { return __factory.Create(__Method_Invest); }
      }

      public aelf::IMethodStub<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> UnInvest
      {
        get { return __factory.Create(__Method_UnInvest); }
      }

      public aelf::IMethodStub<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> ReFund
      {
        get { return __factory.Create(__Method_ReFund); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.Ewell.ReFundAllInput, global::Google.Protobuf.WellKnownTypes.Empty> ReFundAll
      {
        get { return __factory.Create(__Method_ReFundAll); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.Ewell.ClaimInput, global::Google.Protobuf.WellKnownTypes.Empty> Claim
      {
        get { return __factory.Create(__Method_Claim); }
      }

      public aelf::IMethodStub<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> ClaimLiquidatedDamage
      {
        get { return __factory.Create(__Method_ClaimLiquidatedDamage); }
      }

      public aelf::IMethodStub<global::AElf.Types.Hash, global::Google.Protobuf.WellKnownTypes.Empty> ClaimLiquidatedDamageAll
      {
        get { return __factory.Create(__Method_ClaimLiquidatedDamageAll); }
      }

      public aelf::IMethodStub<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> GetWhitelistContractAddress
      {
        get { return __factory.Create(__Method_GetWhitelistContractAddress); }
      }

      public aelf::IMethodStub<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> GetAdmin
      {
        get { return __factory.Create(__Method_GetAdmin); }
      }

      public aelf::IMethodStub<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Types.Address> GetTokenAddress
      {
        get { return __factory.Create(__Method_GetTokenAddress); }
      }

      public aelf::IMethodStub<global::AElf.Types.Hash, global::AElf.Contracts.Ewell.ProjectInfo> GetProjectInfo
      {
        get { return __factory.Create(__Method_GetProjectInfo); }
      }

      public aelf::IMethodStub<global::AElf.Types.Hash, global::AElf.Contracts.Ewell.ProjectListInfo> GetProjectListInfo
      {
        get { return __factory.Create(__Method_GetProjectListInfo); }
      }

      public aelf::IMethodStub<global::AElf.Types.Hash, global::AElf.Contracts.Ewell.ExtraInfoIdList> GetWhitelist
      {
        get { return __factory.Create(__Method_GetWhitelist); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.Ewell.GetInvestDetailInput, global::AElf.Contracts.Ewell.InvestDetail> GetInvestDetail
      {
        get { return __factory.Create(__Method_GetInvestDetail); }
      }

      public aelf::IMethodStub<global::AElf.Contracts.Ewell.GetProfitDetailInput, global::AElf.Contracts.Ewell.ProfitDetail> GetProfitDetail
      {
        get { return __factory.Create(__Method_GetProfitDetail); }
      }

      public aelf::IMethodStub<global::AElf.Types.Hash, global::AElf.Types.Hash> GetWhitelistId
      {
        get { return __factory.Create(__Method_GetWhitelistId); }
      }

      public aelf::IMethodStub<global::AElf.Types.Hash, global::AElf.Contracts.Ewell.LiquidatedDamageDetails> GetLiquidatedDamageDetails
      {
        get { return __factory.Create(__Method_GetLiquidatedDamageDetails); }
      }

      public aelf::IMethodStub<global::AElf.Types.Hash, global::AElf.Types.Address> GetProjectAddressByProjectHash
      {
        get { return __factory.Create(__Method_GetProjectAddressByProjectHash); }
      }

      public aelf::IMethodStub<global::AElf.Types.Address, global::AElf.Types.Address> GetPendingProjectAddress
      {
        get { return __factory.Create(__Method_GetPendingProjectAddress); }
      }

    }
  }
}
#endregion

